{"pages":[],"posts":[{"title":"Git 최초설정 및 사용해보기","text":"Git 설치후 사용하기오늘은 git를 사용법을 다시한번 복습해보았다.필자는 macOS를 사용하고 있었기에 별도의 설치는 필요없었지만윈도우라면 여기서 git을 깔고 진행하면 된다. 설치 완료후 terminal(맥)이나 git bash(윈도우)에서 버전 체크를 해보자 1$ git --version git version 2.20.1 (Apple Git-117)(버전은 다를수 있지만 이런식으로 뜨면 준비완료) config 정보 입력/변경이제 사용자이름과 이메일주소를 입력해보자. 이정보는 Github의 유저이름과 이메일 주소와는 무관하다 (물론 같아도 상관없지만).Git을 통해 커밋 할때마다 이 정보가 사용되고 github에 이 내용이 표시가 된다. 12$ git config --global user.name &quot;내 유저이름&quot;$ git config --global user.email &quot;내 이메일 주소&quot; 정상적으로 적용됐는지 확인해보자. 1$ git config --list 123user.name= 내 유저이름user.email= 내 이메일 주소...추가적인 정보들 만약 수정이 필요하면 아래 명령어 입력후 다시 입력을 해주면 된다. 123git config --unset --global user.name 또는 git config --unset --global user.email 본격적으로 GIT 활용하기프로젝트를 시작하는 방법 두가지 $ git init - 로컬 작업공간에서 시작해 문서/소스코드를 순차적으로 내보내기 $ git clone - github에서 remote repository 생성후 로컬 작업공간으로 클론 ⚠️ github 계정이 없다면 Github에서 계정 생성후 진행 git init 프로젝트 폴더 생성하기(이미 진행중인 프로젝트가 있다면 cd를 통해 디렉토리 변경) 12$ mkdir first-rep$ cd first-repo $ git init 명령으로 local repository로서 역할을 시작 (initialization) github에서 새로운 remote repository 생성후, 주소 복사 현재 작업공간에 remote repo 주소 추가 1$ git remote add origin 복사한주소 $ git remote get-url origin를 통해 주소 등록 여부 확인 빈 프로젝트면 $ touch README.md로 마크다운 파일 추가 프로젝트 상태확인 1$ git status untracked files: README.md 또는 git init 전에 파일들이 나열되어 있을것 $ git add README.md 또는 파일이 여러개일 경우 $ git add .를 사용해workspace에서 staging area로 이동 $ git commit -m &quot;메세지 내용&quot;을 입력하여 Commit message 작성커밋 방식은 Conventional commits 참조 ⚠️git commit -m을 사용해 커밋 메세지를 작성하면 수정하기 어려워 보통 텍스트 에디터를 설정하여 작성한다. 12$ git config --global core.editor &quot;vim&quot;$ git commit vim이 실행되면 i 를 눌러 편집모드(insert mode)로 들어간뒤 제목과 상세내용을 적어주면 된다. docs: 커밋 제목 **1. 커밋 메세지 상세내용1 ** **2. 커밋 메세지 상세내용2 ** # Please enter the commit message for your changes. Lines starting # with ‘#’ will be ignored, and an empty message aborts the commit. 작성후 :wq 를 입력하면 저장후 커밋 q! 를 입력하면 취소. 첫 push작업이라면 $ git push -u origin master를 이용해 remote repo로 push.이후에는 $ git push -u origin master 사용 새로운 파일, 변동사항이 있을때마다 7 ~ 10 반복 git clone github에서 remote repository를 LICENSE, README.md, .gitignore 등의 파일과 함께 생성 Clone or Download 버튼 클릭후 https 주소 복사 $ git clone 복사한주소 를 입력하여 local repository를 생성 새 파일을 만들거나 기존의 파일들 변경 $ git status로 프로젝트 상태확인 $ git add 파일이름 또는 $ git add .를 사용해 staging area에 추가 $ git commit으로 커밋 (방법은 git init 9번 참조) $ git push origin master로 변동사항 remote repository에 적용 변동사항 있을때마다 5~8번 반복하여 버전관리","link":"/2020/10/17/Git-%EC%B5%9C%EC%B4%88%EC%84%A4%EC%A0%95-%EB%B0%8F-%EC%82%AC%EC%9A%A9%ED%95%B4%EB%B3%B4%EA%B8%B0/"}],"tags":[{"name":"git","slug":"git","link":"/tags/git/"},{"name":"git config","slug":"git-config","link":"/tags/git-config/"}],"categories":[{"name":"git","slug":"git","link":"/categories/git/"},{"name":"software","slug":"git/software","link":"/categories/git/software/"},{"name":"collaboration","slug":"git/software/collaboration","link":"/categories/git/software/collaboration/"}]}